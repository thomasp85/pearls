// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// count_rows_c
IntegerVector count_rows_c(ListOf<DataFrame> list_df);
RcppExport SEXP _pearls_count_rows_c(SEXP list_dfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< ListOf<DataFrame> >::type list_df(list_dfSEXP);
    rcpp_result_gen = Rcpp::wrap(count_rows_c(list_df));
    return rcpp_result_gen;
END_RCPP
}
// count_columns_c
IntegerVector count_columns_c(ListOf<DataFrame> list_df);
RcppExport SEXP _pearls_count_columns_c(SEXP list_dfSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< ListOf<DataFrame> >::type list_df(list_dfSEXP);
    rcpp_result_gen = Rcpp::wrap(count_columns_c(list_df));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_pearls_count_rows_c", (DL_FUNC) &_pearls_count_rows_c, 1},
    {"_pearls_count_columns_c", (DL_FUNC) &_pearls_count_columns_c, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_pearls(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
